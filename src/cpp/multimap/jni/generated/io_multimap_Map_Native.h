/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class io_multimap_Map_Native */

#ifndef _Included_io_multimap_Map_Native
#define _Included_io_multimap_Map_Native
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     io_multimap_Map_Native
 * Method:    newMap
 * Signature: (Ljava/lang/String;Lio/multimap/Options;)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_io_multimap_Map_00024Native_newMap
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     io_multimap_Map_Native
 * Method:    put
 * Signature: (Ljava/nio/ByteBuffer;[B[B)V
 */
JNIEXPORT void JNICALL Java_io_multimap_Map_00024Native_put
  (JNIEnv *, jclass, jobject, jbyteArray, jbyteArray);

/*
 * Class:     io_multimap_Map_Native
 * Method:    get
 * Signature: (Ljava/nio/ByteBuffer;[B)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_io_multimap_Map_00024Native_get
  (JNIEnv *, jclass, jobject, jbyteArray);

/*
 * Class:     io_multimap_Map_Native
 * Method:    getMutable
 * Signature: (Ljava/nio/ByteBuffer;[B)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_io_multimap_Map_00024Native_getMutable
  (JNIEnv *, jclass, jobject, jbyteArray);

/*
 * Class:     io_multimap_Map_Native
 * Method:    remove
 * Signature: (Ljava/nio/ByteBuffer;[B)J
 */
JNIEXPORT jlong JNICALL Java_io_multimap_Map_00024Native_remove
  (JNIEnv *, jclass, jobject, jbyteArray);

/*
 * Class:     io_multimap_Map_Native
 * Method:    removeAll
 * Signature: (Ljava/nio/ByteBuffer;[BLio/multimap/Callables/Predicate;)J
 */
JNIEXPORT jlong JNICALL Java_io_multimap_Map_00024Native_removeAll
  (JNIEnv *, jclass, jobject, jbyteArray, jobject);

/*
 * Class:     io_multimap_Map_Native
 * Method:    removeAllEqual
 * Signature: (Ljava/nio/ByteBuffer;[B[B)J
 */
JNIEXPORT jlong JNICALL Java_io_multimap_Map_00024Native_removeAllEqual
  (JNIEnv *, jclass, jobject, jbyteArray, jbyteArray);

/*
 * Class:     io_multimap_Map_Native
 * Method:    removeFirst
 * Signature: (Ljava/nio/ByteBuffer;[BLio/multimap/Callables/Predicate;)Z
 */
JNIEXPORT jboolean JNICALL Java_io_multimap_Map_00024Native_removeFirst
  (JNIEnv *, jclass, jobject, jbyteArray, jobject);

/*
 * Class:     io_multimap_Map_Native
 * Method:    removeFirstEqual
 * Signature: (Ljava/nio/ByteBuffer;[B[B)Z
 */
JNIEXPORT jboolean JNICALL Java_io_multimap_Map_00024Native_removeFirstEqual
  (JNIEnv *, jclass, jobject, jbyteArray, jbyteArray);

/*
 * Class:     io_multimap_Map_Native
 * Method:    replaceAll
 * Signature: (Ljava/nio/ByteBuffer;[BLio/multimap/Callables/Function;)J
 */
JNIEXPORT jlong JNICALL Java_io_multimap_Map_00024Native_replaceAll
  (JNIEnv *, jclass, jobject, jbyteArray, jobject);

/*
 * Class:     io_multimap_Map_Native
 * Method:    replaceAllEqual
 * Signature: (Ljava/nio/ByteBuffer;[B[B[B)J
 */
JNIEXPORT jlong JNICALL Java_io_multimap_Map_00024Native_replaceAllEqual
  (JNIEnv *, jclass, jobject, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     io_multimap_Map_Native
 * Method:    replaceFirst
 * Signature: (Ljava/nio/ByteBuffer;[BLio/multimap/Callables/Function;)Z
 */
JNIEXPORT jboolean JNICALL Java_io_multimap_Map_00024Native_replaceFirst
  (JNIEnv *, jclass, jobject, jbyteArray, jobject);

/*
 * Class:     io_multimap_Map_Native
 * Method:    replaceFirstEqual
 * Signature: (Ljava/nio/ByteBuffer;[B[B[B)Z
 */
JNIEXPORT jboolean JNICALL Java_io_multimap_Map_00024Native_replaceFirstEqual
  (JNIEnv *, jclass, jobject, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     io_multimap_Map_Native
 * Method:    forEachKey
 * Signature: (Ljava/nio/ByteBuffer;Lio/multimap/Callables/Procedure;)V
 */
JNIEXPORT void JNICALL Java_io_multimap_Map_00024Native_forEachKey
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     io_multimap_Map_Native
 * Method:    forEachValue
 * Signature: (Ljava/nio/ByteBuffer;[BLio/multimap/Callables/Procedure;)V
 */
JNIEXPORT void JNICALL Java_io_multimap_Map_00024Native_forEachValue__Ljava_nio_ByteBuffer_2_3BLio_multimap_Callables_Procedure_2
  (JNIEnv *, jclass, jobject, jbyteArray, jobject);

/*
 * Class:     io_multimap_Map_Native
 * Method:    forEachValue
 * Signature: (Ljava/nio/ByteBuffer;[BLio/multimap/Callables/Predicate;)V
 */
JNIEXPORT void JNICALL Java_io_multimap_Map_00024Native_forEachValue__Ljava_nio_ByteBuffer_2_3BLio_multimap_Callables_Predicate_2
  (JNIEnv *, jclass, jobject, jbyteArray, jobject);

/*
 * Class:     io_multimap_Map_Native
 * Method:    isReadOnly
 * Signature: (Ljava/nio/ByteBuffer;)Z
 */
JNIEXPORT jboolean JNICALL Java_io_multimap_Map_00024Native_isReadOnly
  (JNIEnv *, jclass, jobject);

/*
 * Class:     io_multimap_Map_Native
 * Method:    close
 * Signature: (Ljava/nio/ByteBuffer;)V
 */
JNIEXPORT void JNICALL Java_io_multimap_Map_00024Native_close
  (JNIEnv *, jclass, jobject);

/*
 * Class:     io_multimap_Map_Native
 * Method:    importFromBase64
 * Signature: (Ljava/lang/String;Ljava/lang/String;Lio/multimap/Options;)V
 */
JNIEXPORT void JNICALL Java_io_multimap_Map_00024Native_importFromBase64
  (JNIEnv *, jclass, jstring, jstring, jobject);

/*
 * Class:     io_multimap_Map_Native
 * Method:    exportToBase64
 * Signature: (Ljava/lang/String;Ljava/lang/String;Lio/multimap/Options;)V
 */
JNIEXPORT void JNICALL Java_io_multimap_Map_00024Native_exportToBase64
  (JNIEnv *, jclass, jstring, jstring, jobject);

/*
 * Class:     io_multimap_Map_Native
 * Method:    optimize
 * Signature: (Ljava/lang/String;Ljava/lang/String;Lio/multimap/Options;)V
 */
JNIEXPORT void JNICALL Java_io_multimap_Map_00024Native_optimize
  (JNIEnv *, jclass, jstring, jstring, jobject);

#ifdef __cplusplus
}
#endif
#endif
